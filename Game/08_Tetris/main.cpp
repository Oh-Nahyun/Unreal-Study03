#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <time.h>
#include <Windows.h>

// Define ------------------------------
#define LEFT			75		// 좌로 이동
#define RIGHT			77		// 우로 이동
#define UP				72		// 회전
#define DOWN			80		// 빠른 하단 이동 (Soft Move)
#define SPACE			21		// 바로 바닥으로 순간 이동 (Hatd Move)
#define p			   112		// p키를 입력 (소문자)
#define P				80		// P키를 입력 (대문자)
#define ESC				27		// 게임 종료

// 게임 보드 상태 & Status 정보
// 블록이 이동할 수 있는 공간은 0 또는 음수로 표현 (0, -1, -2)
// 블록이 이동할 수 없는 공간은 양수로 표현 (1, 2)
#define ACTIVE_BLOCK	-2
#define CELLING			-1
#define EMPTY			 0
#define WALL			 1
#define INACTIVE_BLOCK	 2		// 이동이 완료된 블록 값

#define MAIN_X			11		// 게임판 가로 크기
#define MAIN_Y			23		// 게임판 세로 크기
#define MAIN_X_ADJ		 3		// 게임판 위치 조정 x (여유공간)
#define MAIN_Y_ADJ		 1		// 게임판 위치 조정 y (여유공간)

#define STATUS_X_ADJ	MAIN_X_ADJ + MAIN_X + 1		// 게임 정보 위치

int STATUS_Y_GOAL;				// GOAL  정보 표시 위치, Y 좌표 저장
int STATUS_Y_LEVEL;				// LEVEL 정보 표시 위치, Y 좌표 저장
int STATUS_Y_SCORE;				// SCORE 정보 표시 위치, Y 좌표 저장

// 블록 데이터 ★ ★ ★
// 블록 모양 저장, 4 * 4의 공간에 블록을 표현한다.
// block[type][rotation][4][4] <= 버퍼 잡기 [7][4][4][4]
int blocks[7][4][4][4] = { 
	// O 미노 
	{{0,0,0,0, 0,1,1,0, 0,1,1,0, 0,0,0,0}, {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0}}, 
	// I 미노 
	{{0,0,0,0, 0,0,0,0, 1,1,1,1, 0,0,0,0}, {0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0},{0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0},{0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0}}, 
	// Z 미노 
	{{0,0,0,0, 1,1,0,0, 0,1,1,0, 0,0,0,0}, {0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0},{0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0}}, 
	// S 미노 
	{{0,0,0,0, 0,1,1,0, 1,1,0,0, 0,0,0,0}, {0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0},{0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0}}, 
	// L 미노 
	{{0,0,0,0, 0,0,1,0, 1,1,1,0, 0,0,0,0}, {0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0},{0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0},{0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0}}, 
	// J 미노 
	{{0,0,0,0, 1,0,0,0, 1,1,1,0, 0,0,0,0}, {0,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0},{0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0},{0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0}}, 
	// T 미노 
	{{0,0,0,0, 0,1,0,0, 1,1,1,0, 0,0,0,0}, {0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0},{0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0},{0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0}} 
};

// 게임 변수 ------------------------------
// 블록 종류
// 블록 회전값
// 다음 블록값

// 게임판의 정보를 저장하는 배열. 화면에 표시 후 Main_cpy로 복사된다.
// 게임판이 화면에 표기되기 전의 정보를 가지고 있음.

// 이동 중인 블록의 게임판 상의 x, y 좌표

// 키보드로 받은 키값

// 게임 진행 속도
// 현재 레벨
// 목표 점수 : 다음 레벨로 넘어가기 위한 점수
// 현재 레벨에서 제거한 줄 수
// 현재 점수
// 마지막 점수
// 최고 점수

// 새로운 블록이 필요함을 알리는 플래그 (flag)
// 현재 이동 중인 블록이 충돌 상태인지 알려주는 플래그 (flag)
// 다음 레벨로 진행하라고 알리는 플래그 (현재 레벨 목표가 완료되었음) (flag)
// 하드 드롭 상태임을 알리는 플래그 (flag) (= bool 형)

// 커서 숨기기 열거형 데이터

// 게임 함수 ------------------------------

// ------------------------------

int main()
{
	return 0;
}

// ------------------------------



